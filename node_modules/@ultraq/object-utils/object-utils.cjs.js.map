{"version":3,"sources":["object-utils.js"],"names":[],"mappings":";;;;;QAwBgB,K,GAAA,K;QAqCA,Q,GAAA,Q;AA7DhB;;;;;;;;;;;;;;;;AAgBA;;;;;;;;AAQO,SAAS,KAAT,GAAwC;AAAA,MAAzB,MAAyB,uEAAhB,EAAgB;;AAAA,oCAAT,OAAS;AAAT,WAAS;AAAA;;AAE9C,UAAQ,OAAR,CAAgB,kBAAU;AACzB,QAAI,MAAJ,EAAY;AACX,aAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,eAAO;AAClC,YAAI,cAAc,OAAO,GAAP,CAAlB;AACA,YAAI,cAAc,OAAO,GAAP,CAAlB;AACA,eAAO,GAAP,IAAc,uBAAuB,MAAvB,IAAiC,uBAAuB,MAAxD,GACb,MAAM,WAAN,EAAmB,WAAnB,CADa,GAEb,WAFD;AAGA,OAND;AAOA;AACD,GAVD;AAWA,SAAO,MAAP;AACA;;AAED;;;;;;;;;;;;;;;;;;;;;AAqBO,SAAS,QAAT,CAAkB,MAAlB,EAA0B,IAA1B,EAAgC;;AAEtC,SAAO,KAAK,KAAL,CAAW,GAAX,EAAgB,MAAhB,CAAuB,UAAC,aAAD,EAAgB,SAAhB,EAA8B;AAC3D,WAAO,iBAAiB,cAAc,SAAd,CAAxB;AACA,GAFM,EAEJ,MAFI,CAAP;AAGA","file":"object-utils.cjs.js","sourcesContent":["/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Deep-merges all of the properties of the objects in `sources` with `target`,\n * modifying the target object and returning it.\n * \n * @param {Object} target\n * @param {...Object} sources\n * @return {Object} The modified target object.\n */\nexport function merge(target = {}, ...sources) {\n\n\tsources.forEach(source => {\n\t\tif (source) {\n\t\t\tObject.keys(source).forEach(key => {\n\t\t\t\tlet targetValue = target[key];\n\t\t\t\tlet sourceValue = source[key];\n\t\t\t\ttarget[key] = targetValue instanceof Object && sourceValue instanceof Object ?\n\t\t\t\t\tmerge(targetValue, sourceValue) :\n\t\t\t\t\tsourceValue;\n\t\t\t});\n\t\t}\n\t});\n\treturn target;\n}\n\n/**\n * Returns a value from an object via a path string that describes the nesting\n * of objects to get to the value.\n * \n * eg:\n * \n * ```\n * let object = {\n *   greeting: {\n *     message: 'Hello!'\n *   }\n * };\n * let pathToMessage = 'greeting.message';\n * ```\n * \n * @param {Object} object\n * @param {String} path A dot-separated path string to get to the desired value\n *   within the object\n * @return {Object} The value at the given path within the object, or\n *   `undefined` if the path doesn't resolve within the object.\n */\nexport function navigate(object, path) {\n\n\treturn path.split('.').reduce((previousValue, pathToken) => {\n\t\treturn previousValue && previousValue[pathToken];\n\t}, object);\n}\n"]}